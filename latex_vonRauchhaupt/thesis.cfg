%
% This is the configuration of all thesis' meta data.
%

\NeedsTeXFormat{LaTeX2e}
\ProvidesFile{thesis.cfg}

% thesis type
\newcommand{\thesisSubject}{Bachelor Thesis}

% title
\newcommand{\thesisTitle}{Design and Implementation of a high performance IPC for Intrusion Prevention using Socket API}
% subtitle
\newcommand{\thesisSubtitle}{~}

% author
\newcommand{\thesisAuthortitle}{~}
\newcommand{\thesisAuthorname}{Daniel Aeneas}
\newcommand{\thesisAuthorsurname}{von Rauchhaupt}
\newcommand{\thesisAuthoremail}{rauchhaupt@uni-potsdam.de}

% location and institute
\newcommand{\thesisPlace}{Potsdam}
\newcommand{\thesisUni}{University of Potsdam}
\newcommand{\thesisDepart}{Institute for Computer Science}
\newcommand{\thesisProf}{Operating Systems and Distributed Systems}

% logo
\newcommand{\thesisLogo}{\vspace{-0.6cm}\includegraphics[width=3cm]{images/uni-logo}\vspace{1cm}}

% date
\newcommand{\thesisDate}{\today}
\newcommand{\thesisMonth}{\ifcase\month\or January\or February\or March\or April\or May\or June\or July\or August\or September\or October\or November\or December\fi\space \number\year}
\newcommand{\thesisDateGerman}{\foreignlanguage[date]{ngerman}{\today}}

% main assayer (type '~' to leave empty)
\newcommand{\thesisAssayer}{Prof. Dr. Bettina Schnor}
% 1st advisor
\newcommand{\thesisAdvisorOne}{Max Schrötter}
% 2nd advisor ('~' to leave empty)
\newcommand{\thesisAdvisorTwo}{~}

% keywords
\newcommand{\thesisKeywords}{Bachelor Thesis, Implementation, Design, Simulation, Measurement, Socket, Intrusion prevention system, IPS, Inter-process communication, IPC}

% abstract
\newcommand{\thesisAbstract}{
Traditionally, host-based intrusion prevention systems utilize file-based logging as a means of \ac{IPC}. 
However, a lack of bandwidth, or high latency, can unacceptably delay reception of critical information contained in these logs.
This may lead to time-sensitive situations, for example a \ac{DoS} attack on the host system, escalating unnecessarily.
Alternative \ac{IPC} methods allow to remedy this issue.
To this end, the light-weight prototype Simplefail2ban, based on Fail2ban, features a newly implemented \ac{IPC} type utilizing shared memory, which has shown improved performance over file-based \ac{IPC}.

Using Simplefail2ban, this thesis implements and evaluates another type of \ac{IPC} based on UNIX domain sockets. 
It has been concluded that while this UNIX domain socket approach remains competitive under high loads of 30M unwanted \ac{PPS} stemming from up to 131,068 clients, the shared memory method outperforms this approach.
When supplying multiple reader processes, the UNIX domain socket \ac{IPC} lacks bandwidth and is unable to transmit messages at this rate.
Still, at 20M \ac{PPS} of unwanted traffic, the UNIX domain socket \ac{IPC} type of Simplefail2ban is able to reliably defend against \ac{DoS} attacks while providing log messages to multiple readers.
}

\newcommand{\thesisZusammenfassung}{
Traditionell verwenden Host-basierte Intrusion-Prevention-Systeme dateibasierte Log\-nach\-rich\-ten zur Interprozesskommunikation.
Mangelnde Bandbreite oder hohe Latenzen können jedoch den Empfang der in diesen Logs enthaltenen kritischen Informationen unannehmbar verzögern.
Dies kann zeitkritische Situationen, wie zum Beispiel bei einem \ac{DoS}-Angriff auf das Host-System, unnötig verschärfen.
Alternative Interprozesskommunikationsmethoden können dieses Problem beheben.
Dazu verfügt der auf Fail2ban basierende Leichtbau-Prototyp Simplefail2ban über einen neu implementierten Interprozesskommunikationstyp, der gemeinsam genutzten Speicher (Shared Memory) zweier Prozesse nutzt.
Dieser Ansatz zeigt eine bessere Leistung als dateibasierte Interprozesskommunikation.

Diese Arbeit implementiert und evaluiert eine andere Art von Interprozesskommunikation auf Basis von UNIX Domain Sockets in Simplefail2ban.
Es konnte festgestellt werden, dass diese Methode konkurrenzfähig ist, selbst unter hohen Lasten von 30 Millionen unerwünschten Paketen pro Sekunde von bis zu 131.068 Clients.
Trotzdem bleibt der Shared-Memory-Ansatz performanter.
Bei mehreren Leseprozesse fehlt es dem UNIX-Domain-Socket-Interprozesskommunikation an Bandbreite, um solche Lasten zuverlässig zu bewältigen.
Dennoch gelingt es diesem Interprozesskommunikations-Typ von Simplefail2ban bei 20 Millionen Paketen pro Sekunde, \ac{DoS}-Angriffe zuverlässig abzuwehren und gleichzeitig Lognachrichten an mehrere Leseprozesse zu liefern.
}

% thanks
\newcommand{\thesisThanks}{}

% bibliography style (see https://de.overleaf.com/learn/latex/Biblatex_citation_styles for more style options)
\newcommand{\citationstyle}{numeric}
